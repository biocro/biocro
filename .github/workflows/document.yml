name: Generate documentation

on:

  workflow_call:
    inputs:
      pkgdown-build:
        description: Build the pkgdown site
        type: boolean
        default: true
      bookdown-build:
        description: Build the developer manual
        type: boolean
        default: true
      doxygen-build:
        description: Build the Doxygen documentation
        type: boolean
        default: true
      publish:
        description: Publish the documentation
        type: boolean
        default: true
      custom-url:
        description: The base url for the pkgdown documentation
        type: string
        default: '' # (means the default will be computed below)

  workflow_dispatch:
    inputs:
      pkgdown-build:
        description: Build the pkgdown site
        type: boolean
        default: true
      bookdown-build:
        description: Build the developer manual
        type: boolean
        default: true
      doxygen-build:
        description: Build the Doxygen documentation
        type: boolean
        default: true
      publish:
        description: Publish the documentation
        type: boolean
        default: false
      custom-url:
        description: The base url for the pkgdown documentation
        type: string
        default: '' # (means the default will be computed below)

env:
  # The documentation repository:
  PUBLISH_TO: "biocro/BioCro-documentation"
  # Relative path from the GitHub workspace directory to the directory
  # where the documentation repository will be checked out:
  BIOCRO_DOCUMENTATION_ROOT: biocro_documentation_root

jobs:
  build:
    name: Build pkgdown, bookdown, and Doxygen documentation

    runs-on: ubuntu-latest

    steps:

    - name: 0. Set the environment variable VERSION using the GitHub ref name
      run: |
        # This is a very arcane Bash syntax for replacing occurrences of '/' in GITHUB_REF_NAME with '_':
        echo "VERSION=${GITHUB_REF_NAME////_}" >> $GITHUB_ENV

    - name: 1. Check out repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: 2. Set up R
      if: inputs.bookdown-build || inputs.pkgdown-build
      uses: r-lib/actions/setup-r@v2

    - name: 3a. Install dependencies and pkgdown
      if: inputs.pkgdown-build
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        extra-packages: any::pkgdown, local::.

    - name: 3b. Install dependencies
      if: inputs.bookdown-build && !inputs.pkgdown-build
      uses: r-lib/actions/setup-r-dependencies@v2

    - name: 4. Build Bookdown book
      if: inputs.bookdown-build
      uses: './.github/actions/render_bookdown_book'

    - name: 5a. Compute base URL for pkgdown book
      if: inputs.pkgdown-build
      run: |
        if [[ inputs.publish == true ]]             # Use the computed default if we are publishing the site.
        then
          echo "BASE_URL=https://${PUBLISH_TO/\//.github.io\/}/$VERSION/pkgdown/" >> $GITHUB_ENV
        else
          echo "BASE_URL=${{ inputs.custom-url }}" >> $GITHUB_ENV
        fi

    - name: 5b. Build pkgdown book
      if: inputs.pkgdown-build
      uses: ./.github/actions/build_pkgdown_site
      with:
        base_url: ${{ env.BASE_URL }}

    - name: 6. Build Doxygen documentation
      if: inputs.doxygen-build
      uses: ./.github/actions/run_doxygen

    # The "PUBLISH_TO" repository is where the documentation will be
    # pushed to (on the default branch).  Providing ssh-key to this
    # checkout action gives us permission to check in our changes
    # later, in the Push step:

    - name: 7a. Check out the target "PUBLISH_TO" repository
      if: inputs.publish
      uses: actions/checkout@v3
      with:
        repository: ${{ env.PUBLISH_TO }}
        path: ${{ env.BIOCRO_DOCUMENTATION_ROOT }}
        ssh-key:  ${{ secrets.PRIVATE_SSH_KEY }}

    - name: 7b. Make sure that the root documentation directory exists
      if: '!inputs.publish'
      run: |
        mkdir -p ${{ env.BIOCRO_DOCUMENTATION_ROOT }}

    - name: 8. "Copy newly-generated documentation files into working
                copy of the target repository"

      env:

        # The Doxygen version directory names are hard-coded into the
        # Make file and are determined by the Make target.  An
        # exception to this is
        # "doxygen_docs_modules_public_members_only", which is
        # explicitly set as an output directory in the run_doxygen
        # action, overriding the default output directory for the Make
        # file target "module-docs-html".  (The default output
        # directory "doxygen_docs_modules" was already used as the
        # output directory for a version of the module documentation
        # that included documentation of private members, and we don't
        # want to overwrite it.)

        version_directories: "doxygen_docs_complete doxygen_docs_modules doxygen_docs_modules_public_members_only doxygen_docs_framework"

      working-directory: ${{ env.BIOCRO_DOCUMENTATION_ROOT }}

      run: |
        # (Re)create target documentation directory:
        mkdir -p $VERSION

        # Symlink "latest" to the new version:
        rm -f latest
        ln -s $VERSION latest

        # Copy the respective documentation into them:

        if [[ ${{ inputs.pkgdown-build }} == true ]]
        then
            echo "Copying pkgdown files"
            rsync -a --delete ../docs/ $VERSION/pkgdown || true
        fi

        if [[ ${{ inputs.bookdown-build }} == true ]]
        then
            echo "copying bookdown files"
            rsync -a --delete ../bookdown/_book/ $VERSION/bookdown || true
        fi

        if [[ ${{ inputs.doxygen-build }} == true ]]
        then
            echo "copying doxygen files"
            mkdir -p $VERSION/doxygen
            for dir in ${{ env.version_directories }}; do

                # Copy the documentation for version $dir:
                rsync -a --delete ../doxygen/$dir/html/ $VERSION/doxygen/$dir || true

            done
        fi

    - name: 9. Commit updates and push to target (documentation) repository

      if: inputs.publish

      working-directory: ${{ env.BIOCRO_DOCUMENTATION_ROOT }}
      run: |

        # user.name and user.email are somewhat arbitrary but must be provided:
        git config user.name biocro-action
        git config user.email bogus@url.com
        git add .
        git commit -m "generated pkgdown and bookdown documentation"
        git push

    - name: 10. Zip documentation
      if: always() # Even if some steps fail, at least try to make a documentation artifact.
      run: |
        tar -czf biocro-docs-from-$VERSION.tgz -C $BIOCRO_DOCUMENTATION_ROOT/$VERSION .

    - name: 11. Upload artifact containing documentation
      if: always() # Even if some steps fail, at least try to make a documentation artifact.
      uses: actions/upload-artifact@v3
      with:
        name: biocro-documentation
        path: biocro-docs-from-${{ env.VERSION }}.tgz
        retention-days: 3
