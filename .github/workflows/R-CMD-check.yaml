# This workflow calls the R-CMD-check workflow after collecting input
# from the user (if run manually) and forming the strategy matrix.

name: R-CMD-check

on:
  pull_request:
  workflow_dispatch:
    # When running manually, allow users to customize the run:
    inputs:
      # What options should be passed to "R CMD check"?
      check-manual:
        description: 'Check the manual'
        type: boolean
        default: true
      check-vignettes:
        description: 'Check the vignettes'
        type: boolean
        default: true
      run-tests:
        description: 'Run the tests'
        type: boolean
        default: true
      check-examples:
        description: 'Check the examples'
        type: boolean
        default: true

      # Should we show debug output?  (This will also skip doing the
      # actual package check and the lengthy steps involved in doing
      # such a check.)
      debug:
        description: 'Show output for debugging'
        type: boolean
        default: false

      # Which platform should we test?
      platform-to-check:
        description: 'Platform to check'
        type: choice
        options:
          - R 3.6 on Ubuntu
          - R release version on Ubuntu
          - R devel version on Ubuntu
          - R 3.6 on macOS
          - R release version on macOS
          - R 3.6 on Windows
          - R release version on Windows
        default: R 3.6 on Ubuntu

jobs:

  matrix_prep:
    name: Prepare strategy matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - id: set-matrix
        name: Construct the strategy matrix
        uses: JoshuaTheMiller/conditional-build-matrix@38b0036b90a7f5f1461f446948d156a714e4fa1e # release 0.0.1
        with:
          inputFile: '.github/workflows/strategy_matrix.json'

          # This filter uses the JMESPath query language to modify the
          # strategy matrix (see https://jmespath.org/).  Note that if
          # the event is anything other than 'workflow_dispatch', the
          # filter condition is true only when configName is 'R 3.6 on
          # Ubuntu'.
          #
          # For the public version of this repository, the "&&
          # configName = 'R 3.6 on Ubuntu'" clause will be eliminated
          # so that when the event is anything other than
          # 'workflow_dispatch', the filter condition is always true
          # and nothing gets filtered out: all the configurations will
          # be run.
          #
          # Note that the output matrix of this job is the includes
          # for a strategy matrix rather than the whole strategy
          # matrix.  Thus, if the result of the filter is
          # [
          #   {
          #     "configName": "R 3.6 on Ubuntu",
          #     "os": "ubuntu-20.04",
          #     "r": "3.6"
          #   }
          # ],
          # the actual output will be
          # { "include":
          #     [
          #       {
          #         "configName": "R 3.6 on Ubuntu",
          #         "os": "ubuntu-20.04",
          #         "r": "3.6"
          #       }
          #     ]
          # }.       
          filter:
            '[?configName == `${{ inputs.platform-to-check }}`
                || `${{ github.event_name }}` != ''workflow_dispatch'']'

  # For debugging:
  display_matrix:
    name: "DEBUG: Display strategy matrix"
    if: inputs.debug || github.event_name != 'workflow_dispatch'
    needs: matrix_prep
    runs-on: ubuntu-latest
    steps:
    - name: Show the strategy matrix
      run: |
        echo 'matrix: ${{ needs.matrix_prep.outputs.matrix }}'

  call-R-CMD-check:
    uses: ./.github/workflows/R-CMD-check-backend.yaml
    needs: matrix_prep
    with:
      strategy-matrix: ${{ needs.matrix_prep.outputs.matrix }}
      
      # Note: Non-manual dispatches automatically run the tests and
      # check the manual, examples, and vignettes!  Note that the
      # github.event inputs will be strings (either 'true' or 'false')
      # so we have to use the "== 'true'" clause to convert each value
      # to a bona fide boolean!

      check-manual:
        "${{ inputs.check-manual
            || github.event_name != 'workflow_dispatch' }}"
      run-tests:
        "${{ inputs.run-tests
            || github.event_name != 'workflow_dispatch' }}"
      check-examples:
        "${{ inputs.check-examples
            || github.event_name != 'workflow_dispatch' }}"
      check-vignettes:
        "${{ inputs.check-vignettes
            || github.event_name != 'workflow_dispatch' }}"

      debug:
        "${{ github.event_name == 'workflow_dispatch' && inputs.debug }}"

